plugins {
	id 'idea'
	id 'fabric-loom'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
}

version = project.mainVersion
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		name = "JourneyMap (Public)"
		url = "https://jm.gserv.me/repository/maven-public/"
	}
	maven {
		url "https://www.cursemaven.com"
	}
}

configurations.configureEach {
	// Check for snapshots more frequently than Gradle's default of 1 day. 0 = every build.
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

// Add the generated resources to the main source set
sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}
dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Xaero's Map Mod
	modCompileOnly "maven.modrinth:xaeros-minimap:23.5.0_Fabric_1.20"

	//Journeymap API
	modCompileOnlyApi group: 'info.journeymap', name: 'journeymap-api', version: project.journeymap_api_version, changing: true
}

processResources {
	inputs.property "version", project.version

	// Add any files/file patterns whose properties should be changed by retrieving them from gradle.properties
	filesMatching("fabric.mod.json") {
		expand "version": project.version
		// use this line instead to retrieve all values from gradle.properties
		// expand project.properties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	archiveBaseName = "Waypoints-For-Homes_FABRIC"
}
modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	// This is the default. Remember to have the MODRINTH_TOKEN environment variable set or else this will fail, or set it to whatever you want - just make sure it stays private!
	projectId = "waypoints-for-homes" // This can be the project ID or the slug. Either will work!
	versionType = "release" // This is the default -- can also be `beta` or `alpha`
	uploadFile = remapJar // With Loom, this MUST be set to `remapJar` instead of `jar`!
	gameVersions = ["1.20.1"] // Must be an array, even with only one version
	loaders = ["fabric"] // Must also be an array - no need to specify this if you're using Loom or ForgeGradle
	dependencies { // A special DSL for creating dependencies
		required.project "fabric-api" // Creates a new required dependency on Fabric API
		optional.project "xaeros-minimap"
		optional.project "journeymap"
	}
	syncBodyFrom = rootProject.file("README.md").text
}